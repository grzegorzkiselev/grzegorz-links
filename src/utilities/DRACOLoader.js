import{BufferAttribute,BufferGeometry,FileLoader,Loader}from"./three.min.js";var DRACOLoader=function(manager){Loader.call(this,manager),this.decoderPath="",this.decoderConfig={},this.decoderBinary=null,this.decoderPending=null,this.workerLimit=4,this.workerPool=[],this.workerNextTaskID=1,this.workerSourceURL="",this.defaultAttributeIDs={position:"POSITION",normal:"NORMAL",color:"COLOR",uv:"TEX_COORD"},this.defaultAttributeTypes={position:"Float32Array",normal:"Float32Array",color:"Float32Array",uv:"Float32Array"}};DRACOLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:DRACOLoader,setDecoderPath:function(path){return this.decoderPath=path,this},setDecoderConfig:function(config){return this.decoderConfig=config,this},setWorkerLimit:function(workerLimit){return this.workerLimit=workerLimit,this},setVerbosity:function(){console.warn("THREE.DRACOLoader: The .setVerbosity() method has been removed.")},setDrawMode:function(){console.warn("THREE.DRACOLoader: The .setDrawMode() method has been removed.")},setSkipDequantization:function(){console.warn("THREE.DRACOLoader: The .setSkipDequantization() method has been removed.")},load:function(url,onLoad,onProgress,onError){var loader=new FileLoader(this.manager);loader.setPath(this.path),loader.setResponseType("arraybuffer"),loader.setRequestHeader(this.requestHeader),loader.setWithCredentials(this.withCredentials),loader.load(url,buffer=>{var taskConfig={attributeIDs:this.defaultAttributeIDs,attributeTypes:this.defaultAttributeTypes,useUniqueIDs:!1};this.decodeGeometry(buffer,taskConfig).then(onLoad).catch(onError)},onProgress,onError)},decodeDracoFile:function(buffer,callback,attributeIDs,attributeTypes){var taskConfig={attributeIDs:attributeIDs||this.defaultAttributeIDs,attributeTypes:attributeTypes||this.defaultAttributeTypes,useUniqueIDs:!!attributeIDs};this.decodeGeometry(buffer,taskConfig).then(callback)},decodeGeometry:function(buffer,taskConfig){for(var attribute in taskConfig.attributeTypes){var type=taskConfig.attributeTypes[attribute];void 0!==type.BYTES_PER_ELEMENT&&(taskConfig.attributeTypes[attribute]=type.name)}var taskKey=JSON.stringify(taskConfig),worker;if(DRACOLoader.taskCache.has(buffer)){var cachedTask=DRACOLoader.taskCache.get(buffer);if(cachedTask.key===taskKey)return cachedTask.promise;if(0===buffer.byteLength)throw new Error("THREE.DRACOLoader: Unable to re-decode a buffer with different settings. Buffer has already been transferred.")}var taskID=this.workerNextTaskID++,taskCost=buffer.byteLength,geometryPending=this._getWorker(taskID,taskCost).then(_worker=>(worker=_worker,new Promise((resolve,reject)=>{worker._callbacks[taskID]={resolve:resolve,reject:reject},worker.postMessage({type:"decode",id:taskID,taskConfig:taskConfig,buffer:buffer},[buffer])}))).then(message=>this._createGeometry(message.geometry));return geometryPending.catch(()=>!0).then(()=>{worker&&taskID&&this._releaseTask(worker,taskID)}),DRACOLoader.taskCache.set(buffer,{key:taskKey,promise:geometryPending}),geometryPending},_createGeometry:function(geometryData){var geometry=new BufferGeometry;geometryData.index&&geometry.setIndex(new BufferAttribute(geometryData.index.array,1));for(var i=0;i<geometryData.attributes.length;i++){var attribute=geometryData.attributes[i],name=attribute.name,array=attribute.array,itemSize=attribute.itemSize;geometry.setAttribute(name,new BufferAttribute(array,itemSize))}return geometry},_loadLibrary:function(url,responseType){var loader=new FileLoader(this.manager);return loader.setPath(this.decoderPath),loader.setResponseType(responseType),loader.setWithCredentials(this.withCredentials),new Promise((resolve,reject)=>{loader.load(url,resolve,void 0,reject)})},preload:function(){return this._initDecoder(),this},_initDecoder:function(){if(this.decoderPending)return this.decoderPending;var useJS="object"!=typeof WebAssembly||"js"===this.decoderConfig.type,librariesPending=[];return useJS?librariesPending.push(this._loadLibrary("draco_decoder.js","text")):(librariesPending.push(this._loadLibrary("draco_wasm_wrapper.js","text")),librariesPending.push(this._loadLibrary("draco_decoder.wasm","arraybuffer"))),this.decoderPending=Promise.all(librariesPending).then(libraries=>{var jsContent=libraries[0];useJS||(this.decoderConfig.wasmBinary=libraries[1]);var fn=DRACOLoader.DRACOWorker.toString(),body=["/* draco decoder */",jsContent,"","/* worker */",fn.substring(fn.indexOf("{")+1,fn.lastIndexOf("}"))].join("\n");this.workerSourceURL=URL.createObjectURL(new Blob([body]))}),this.decoderPending},_getWorker:function(taskID,taskCost){return this._initDecoder().then(()=>{var worker,worker;this.workerPool.length<this.workerLimit?((worker=new Worker(this.workerSourceURL))._callbacks={},worker._taskCosts={},worker._taskLoad=0,worker.postMessage({type:"init",decoderConfig:this.decoderConfig}),worker.onmessage=function(e){var message=e.data;switch(message.type){case"decode":worker._callbacks[message.id].resolve(message);break;case"error":worker._callbacks[message.id].reject(message);break;default:console.error('THREE.DRACOLoader: Unexpected message, "'+message.type+'"')}},this.workerPool.push(worker)):this.workerPool.sort((function(a,b){return a._taskLoad>b._taskLoad?-1:1}));return(worker=this.workerPool[this.workerPool.length-1])._taskCosts[taskID]=taskCost,worker._taskLoad+=taskCost,worker})},_releaseTask:function(worker,taskID){worker._taskLoad-=worker._taskCosts[taskID],delete worker._callbacks[taskID],delete worker._taskCosts[taskID]},debug:function(){console.log("Task load: ",this.workerPool.map(worker=>worker._taskLoad))},dispose:function(){for(var i=0;i<this.workerPool.length;++i)this.workerPool[i].terminate();return this.workerPool.length=0,this}}),DRACOLoader.DRACOWorker=function(){var decoderConfig,decoderPending;function decodeGeometry(draco,decoder,decoderBuffer,taskConfig){var attributeIDs=taskConfig.attributeIDs,attributeTypes=taskConfig.attributeTypes,dracoGeometry,decodingStatus,geometryType=decoder.GetEncodedGeometryType(decoderBuffer);if(geometryType===draco.TRIANGULAR_MESH)dracoGeometry=new draco.Mesh,decodingStatus=decoder.DecodeBufferToMesh(decoderBuffer,dracoGeometry);else{if(geometryType!==draco.POINT_CLOUD)throw new Error("THREE.DRACOLoader: Unexpected geometry type.");dracoGeometry=new draco.PointCloud,decodingStatus=decoder.DecodeBufferToPointCloud(decoderBuffer,dracoGeometry)}if(!decodingStatus.ok()||0===dracoGeometry.ptr)throw new Error("THREE.DRACOLoader: Decoding failed: "+decodingStatus.error_msg());var geometry={index:null,attributes:[]};for(var attributeName in attributeIDs){var attributeType=self[attributeTypes[attributeName]],attribute,attributeID;if(taskConfig.useUniqueIDs)attributeID=attributeIDs[attributeName],attribute=decoder.GetAttributeByUniqueId(dracoGeometry,attributeID);else{if(-1===(attributeID=decoder.GetAttributeId(dracoGeometry,draco[attributeIDs[attributeName]])))continue;attribute=decoder.GetAttribute(dracoGeometry,attributeID)}geometry.attributes.push(decodeAttribute(draco,decoder,dracoGeometry,attributeName,attributeType,attribute))}return geometryType===draco.TRIANGULAR_MESH&&(geometry.index=decodeIndex(draco,decoder,dracoGeometry)),draco.destroy(dracoGeometry),geometry}function decodeIndex(draco,decoder,dracoGeometry){var numFaces,numIndices=3*dracoGeometry.num_faces(),byteLength=4*numIndices,ptr=draco._malloc(byteLength);decoder.GetTrianglesUInt32Array(dracoGeometry,byteLength,ptr);var index=new Uint32Array(draco.HEAPF32.buffer,ptr,numIndices).slice();return draco._free(ptr),{array:index,itemSize:1}}function decodeAttribute(draco,decoder,dracoGeometry,attributeName,attributeType,attribute){var numComponents=attribute.num_components(),numPoints,numValues=dracoGeometry.num_points()*numComponents,byteLength=numValues*attributeType.BYTES_PER_ELEMENT,dataType=getDracoDataType(draco,attributeType),ptr=draco._malloc(byteLength);decoder.GetAttributeDataArrayForAllPoints(dracoGeometry,attribute,dataType,byteLength,ptr);var array=new attributeType(draco.HEAPF32.buffer,ptr,numValues).slice();return draco._free(ptr),{name:attributeName,array:array,itemSize:numComponents}}function getDracoDataType(draco,attributeType){switch(attributeType){case Float32Array:return draco.DT_FLOAT32;case Int8Array:return draco.DT_INT8;case Int16Array:return draco.DT_INT16;case Int32Array:return draco.DT_INT32;case Uint8Array:return draco.DT_UINT8;case Uint16Array:return draco.DT_UINT16;case Uint32Array:return draco.DT_UINT32}}onmessage=function(e){var message=e.data;switch(message.type){case"init":decoderConfig=message.decoderConfig,decoderPending=new Promise((function(resolve){decoderConfig.onModuleLoaded=function(draco){resolve({draco:draco})},DracoDecoderModule(decoderConfig)}));break;case"decode":var buffer=message.buffer,taskConfig=message.taskConfig;decoderPending.then(module=>{var draco=module.draco,decoder=new draco.Decoder,decoderBuffer=new draco.DecoderBuffer;decoderBuffer.Init(new Int8Array(buffer),buffer.byteLength);try{var geometry=decodeGeometry(draco,decoder,decoderBuffer,taskConfig),buffers=geometry.attributes.map(attr=>attr.array.buffer);geometry.index&&buffers.push(geometry.index.array.buffer),self.postMessage({type:"decode",id:message.id,geometry:geometry},buffers)}catch(error){console.error(error),self.postMessage({type:"error",id:message.id,error:error.message})}finally{draco.destroy(decoderBuffer),draco.destroy(decoder)}})}}},DRACOLoader.taskCache=new WeakMap,DRACOLoader.setDecoderPath=function(){console.warn("THREE.DRACOLoader: The .setDecoderPath() method has been removed. Use instance methods.")},DRACOLoader.setDecoderConfig=function(){console.warn("THREE.DRACOLoader: The .setDecoderConfig() method has been removed. Use instance methods.")},DRACOLoader.releaseDecoderModule=function(){console.warn("THREE.DRACOLoader: The .releaseDecoderModule() method has been removed. Use instance methods.")},DRACOLoader.getDecoderModule=function(){console.warn("THREE.DRACOLoader: The .getDecoderModule() method has been removed. Use instance methods.")};export{DRACOLoader};