{"version":3,"file":"bundle.09d05a79596649c32d7e.js","mappings":"kFAAe,ICAA,IDAf,MEIMA,EAAYC,SAASC,cAAc,WAEnCC,EAAiB,KACrB,MAAMC,EAAO,IAAIC,KACXC,EAAMF,EAAKG,UAAwC,IAA3BH,EAAKI,oBACnC,IAAIC,EAAU,IAAIJ,KAAKC,EAAO,OAE9B,OADAG,EAAUA,EAAQC,qBACXD,GAGHE,EAAW,KACf,MAAMF,EAAUN,IAChBH,EAAUY,YAAcH,GAGG,MAC3B,MACMI,EADUV,IACYW,MAAM,KAClC,IAAIC,EAAc,CAAC,EAAG,EAAG,GAEzB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAIC,EAAaC,aAAY,KACzBC,SAASN,EAAYG,IAAM,GAAKD,EAAYC,KAC9CI,cAAcH,GACdC,YAAYP,EAAU,MAEtBI,EAAYC,KACRD,EAAYC,GAAK,KACnBD,EAAYC,GAAM,IAAGD,EAAYC,MAEnChB,EAAUY,YAAcG,EAAYM,KAAK,OAC1C,OAIPC,GAEA,IAAIC,GAAW,EAEX,iEAAiEC,KAAKC,UAAUC,aACvE,EACXzB,SAASC,cAAc,cAAcyB,UAErC,8DAGF,kCACA,uEACA,uEACA,gE","sources":["webpack:///./static/fonts/NewSpirit.woff2","webpack:///./static/fonts/arialnarrow-subset.woff2","webpack:///./src/script.js"],"sourcesContent":["export default __webpack_public_path__ + \"assets/fonts/NewSpirit.woff2\";","export default __webpack_public_path__ + \"assets/fonts/arialnarrow-subset.woff2\";","import \"./../static/fonts/NewSpirit.woff2\"\nimport \"./../static/fonts/arialnarrow-subset.woff2\"\nimport \"./style.css\"\n\nconst htmlClock = document.querySelector(\".mytime\")\n\nconst getCurrentTime = () => {\n  const date = new Date();\n  const UTC = date.getTime() + (date.getTimezoneOffset() * 60000);\n  let newDate = new Date(UTC + (3600000 * \"+3\"));\n  newDate = newDate.toLocaleTimeString()\n  return newDate\n}\n\nconst calcTime = () => {\n  const newDate = getCurrentTime()\n  htmlClock.textContent = newDate\n}\n\nconst initialTimeAnimation = () => {\n  const newDate = getCurrentTime()\n  const timeByUnits = newDate.split(\":\")\n  let myTimeWault = [0, 0, 0]\n\n  for (let i = 0; i < 3; i++) {\n      let intervalId = setInterval(() => {\n      if (parseInt(timeByUnits[i]) - 1 <= myTimeWault[i]) {\n        clearInterval(intervalId)\n        setInterval(calcTime, 1000)\n      }\n        myTimeWault[i]++\n        if (myTimeWault[i] < 10) {\n          myTimeWault[i] = `0${myTimeWault[i]}`\n        }\n        htmlClock.textContent = myTimeWault.join(\":\")\n    }, 100)\n  }\n}\n\ninitialTimeAnimation()\n\nlet isMobile = false;\n\nif (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n  isMobile = true;\n  document.querySelector(\".preloader\").remove()\n} else {\n  import(\"./preloader/preloader.js\")\n}\n\nimport(\"./aspect-ratio/aspect-ratio.js\")\nimport(\"./three/cubes.js\")\nimport(\"./three/flowers.js\")\nimport(\"./three/me.js\")\n"],"names":["htmlClock","document","querySelector","getCurrentTime","date","Date","UTC","getTime","getTimezoneOffset","newDate","toLocaleTimeString","calcTime","textContent","timeByUnits","split","myTimeWault","i","intervalId","setInterval","parseInt","clearInterval","join","initialTimeAnimation","isMobile","test","navigator","userAgent","remove"],"sourceRoot":""}