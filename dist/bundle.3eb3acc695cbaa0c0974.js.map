{"version":3,"file":"bundle.3eb3acc695cbaa0c0974.js","mappings":"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","sources":["webpack:///./src/three/base.js","webpack:///./src/three/cubes.js"],"sourcesContent":["import * as THREE from '../../static/utilities/three.min.js'\nimport {\n  OrbitControls\n} from '../../static/utilities/OrbitControls.js'\n\nconst frame = document.querySelector(\".display__project\");\n\nconst sizes = {\n  width: frame.clientWidth * 2,\n  height: frame.clientHeight * 2\n}\n\nclass Base {\n  constructor(canvas) {\n    this.scene = new THREE.Scene()\n    this.sceneScale = 1;\n\n    this.camera = new THREE.OrthographicCamera();\n    this.camera.position.set(0, 0, -4);\n    this.camera.lookAt(new THREE.Vector3());\n    this.scene.add(this.camera)\n\n    this.renderer = new THREE.WebGLRenderer({\n      canvas: canvas,\n      antialias: true\n    })\n\n    this.renderer.setSize(sizes.width, sizes.height)\n    this.renderer.setClearColor(\"hsl(0, 0%, 95%)\", 1);\n    this.renderer.outputEncoding = THREE.sRGBEncoding\n    this.renderer.toneMapping = THREE.ReinhardToneMapping\n    this.renderer.toneMappingExposure = 3\n\n    this.controls = new OrbitControls(this.camera, canvas)\n    this.enableDamping = true\n\n    window.addEventListener('resize', () => {\n      // Update sizes\n      sizes.width = frame.clientWidth\n      sizes.height = frame.clientHeight\n\n      // Update camera\n      this.camera.aspect = sizes.width / sizes.height\n\n      // Ortho zoom\n      const zoom = 1.0;\n\n      // Bounds\n      this.camera.left = -zoom * this.camera.aspect;\n      this.camera.right = zoom * this.camera.aspect;\n      this.camera.top = zoom;\n      this.camera.bottom = -zoom;\n\n      // Near/Far\n      this.camera.near = -100;\n      this.camera.far = 100;\n\n      // Set position & look at world center\n      this.camera.position.set(zoom, zoom, zoom);\n      // camera.position.set(0, 0, 1);\n      this.camera.lookAt(new THREE.Vector3());\n\n      // Update the camera\n      this.camera.updateProjectionMatrix();\n\n      // Update renderer\n      this.renderer.setSize(sizes.width, sizes.height)\n      this.renderer.setPixelRatio(2)\n    })\n  }\n}\n\n\n\nexport {\n  Base\n};\n","import * as THREE from '../../static/utilities/three.min.js'\nconst random = require(\"canvas-sketch-util/random\");\nconst palettes = require(\"nice-color-palettes\");\nimport { Base}  from \"./base.js\"\n\nconst canvas = document.querySelector('canvas.cubes')\nconst base = new Base(canvas)\n\nconst geometry = new THREE.BoxBufferGeometry(1, 1, 1);\n\nconst colorCount = 5;\nconst palette = random.shuffle(random.pick(palettes))\n  .slice(0, colorCount);\n\nconst meshes = new THREE.Group();\n\nconst fragmentShader = `\n\t\tvarying vec2 vUv;\n\t\tuniform vec3 color;\n\n\t\tvoid main () {\n\t\t\tgl_FragColor = vec4(vec3(color * vUv.x), 1.0);\n\t\t}\n\t`;\n\nconst vertexShader = `\n\t\tvarying vec2 vUv;\n\n\t\tvoid main () {\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position.xyz, 1.0);\n\t\t}\n\t`;\n\nfor (let i = 0; i < 20; i++) {\n  const mesh = new THREE.Mesh(\n    geometry,\n    new THREE.ShaderMaterial({\n      precision: \"lowp\",\n      fragmentShader,\n      vertexShader,\n      uniforms: {\n        color: {\n          value: new THREE.Color(random.pick(palette))\n        }\n      },\n      // color: random.pick(palette),\n      // roughness: 0,\n    })\n  );\n\n  // mesh.castShadow = true;\n  // mesh.receiveShadow = true;\n\n  mesh.position.set(\n    Math.random() * base.sceneScale,\n    Math.random(),\n    Math.random() * base.sceneScale\n  );\n  mesh.scale.multiplyScalar(0.2);\n  mesh.scale.y = mesh.scale.y * Math.random();\n  meshes.add(mesh)\n};\n\nbase.scene.add(meshes);\n\nbase.scene.translateX(base.sceneScale / -2);\nbase.scene.translateZ(base.sceneScale / -2);\nbase.scene.translateY(base.sceneScale / -2);\n\nconst clock = new THREE.Clock()\nconst tick = () => {\n  const elapsedTime = clock.getElapsedTime()\n\n  base.camera.position.x = Math.cos(Math.sin(elapsedTime * 0.5)) * Math.PI;\n  base.camera.position.z = Math.sin(Math.sin(elapsedTime * 0.5)) * Math.PI;\n\n  for (let x = 0; x < meshes.children.length; x++) {\n    let currentMesh = meshes.children[x];\n    currentMesh.scale.x = Math.abs((Math.cos((elapsedTime * 0.01) * (x + 1)) * 0.2)) + 0.01;\n    currentMesh.scale.y = Math.abs((Math.sin((elapsedTime * 0.03) * (x + 1)) * 0.3)) + 0.01;\n    currentMesh.scale.z = Math.abs((Math.sin((elapsedTime * 0.02) * (x + 1)) * 0.1)) + 0.01;\n  }\n\n  base.controls.update()\n  base.renderer.render(base.scene, base.camera)\n  window.requestAnimationFrame(tick)\n}\n\ntick()\n"],"names":["frame","document","querySelector","sizes","width","clientWidth","height","clientHeight","Base","constructor","canvas","this","scene","THREE","sceneScale","camera","position","set","lookAt","add","renderer","antialias","setSize","setClearColor","outputEncoding","toneMapping","toneMappingExposure","controls","OrbitControls","enableDamping","window","addEventListener","aspect","left","right","top","bottom","near","far","updateProjectionMatrix","setPixelRatio","random","require","palettes","base","geometry","palette","shuffle","pick","slice","meshes","i","mesh","precision","fragmentShader","vertexShader","uniforms","color","value","Math","scale","multiplyScalar","y","translateX","translateZ","translateY","clock","tick","elapsedTime","getElapsedTime","x","cos","sin","PI","z","children","length","currentMesh","abs","update","render","requestAnimationFrame"],"sourceRoot":""}